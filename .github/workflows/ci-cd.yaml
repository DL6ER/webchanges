# GitHub Actions docs: https://docs.github.com/en/actions/learn-github-actions
# Reference syntax: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

# Requires encrypted secret (see https://docs.github.com/en/actions/reference/encrypted-secrets) secrets.pypi_password


name: Tests
on: [push, pull_request, workflow_dispatch]

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  pre-commit:
    # Name the Job
    name: Run Quality Assurance
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of the repository per https://github.com/actions/checkout
      - name: Check out repo
        uses: actions/checkout@v2

      # Build Python and packages per https://github.com/actions/setup-python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8  # as per https://docs.readthedocs.io/en/stable/config-file/v2.html?#build-image

      # Install dependencies needed by the repo: local in .pre-commit-config.yaml
      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel
          python -m pip install -U -r docs/requirements.txt

      # Run pre-commit cache per https://github.com/pre-commit/action
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0

  test:
    name: "Test: python=${{ matrix.python-version }} on ${{ matrix.os }}"
    # matrix.os is defined in strategy
    runs-on: ${{ matrix.os }}
    # Identifies any jobs that must complete successfully before this job will run
    needs: [pre-commit]
    # A strategy creates a build matrix for your jobs. You can define different variations to run each job in
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]  # TODO add windows-latest (GHA failing 07-feb-21)
        # for valid python-version see https://github.com/actions/python-versions/blob/main/versions-manifest.json
        python-version: [3.10, 3.9, 3.8, 3.7, 3.6]
#        os: [windows-latest]
#        python-version: [3.9]

    steps:
      # Checks out a copy of the repository per https://github.com/actions/checkout
      - name: Check out repo
        uses: actions/checkout@v2

      # Build Python and packages per https://github.com/actions/setup-python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        # pip -e installs a project in editable mode (i.e. setuptools “develop mode”) from a local project path
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt-get -y update
              sudo apt-get -y install build-essential libpoppler-cpp-dev pkg-config python-dev tesseract-ocr
          fi
          python -m pip install -U pip wheel coveralls
          python -m pip install -U -r requirements.txt
          python -m pip install -U -r requirements_testing.txt
          python -m pip install -U aioxmpp beautifulsoup4 chump cssbeautifier jsbeautifier keyring matrix_client msgpack pushbullet.py pyppeteer redis vobject
          if [ "$RUNNER_OS" == "Linux" ]; then
              python -m pip install -U pdftotext Pillow pytesseract
          fi
          python -m pip install -e .
        shell: bash

      - name: Run tests
        run: |
          python -m pytest -v

      - name: Upload Coverage
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: tests-${{ matrix.python-version }}-${{ matrix.os }}
          COVERALLS_PARALLEL: true

  coveralls:
    name: Finish Coveralls
    needs: [test]
    runs-on: ubuntu-latest
    # The Docker container (https://hub.docker.com/) to run any steps in a job that don't already specify a container
    container: python:3-slim
    steps:
    - name: Finished
      #  Let the Coveralls service (launched as COVERALLS_PARALLEL: true) know you have completed all your parallel runs
      run: |
        pip3 install -U coveralls
        coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test]
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      # Install pip dependencies from setup.py
      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel
          pip install -U .

      # Only building wheel; otherwise run 'python setup.py sdist bdist_wheel'
      - name: Build dist
        run: |
          python -m pip install -U -r requirements_deploy.txt
          python setup.py bdist_wheel

      # PyPI publish GitHub Action from https://github.com/pypa/gh-action-pypi-publish
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}

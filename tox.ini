# tox.ini file for Tox https://tox.readthedocs.io/en/latest/config.html

# To perform the same tests done in GitHub Actions by CI-CD but locally (i.e. before pushing), run $ tox --parallel

# At its core tox provides a convenient way to run arbitrary commands in isolated environments to serve as a single
# entry point for build, test and release activities.

[tox]
minversion = 3.24.1
envlist =
    pre-commit,
    py{310,39,38,37},
    post,
    docs,
    new-install,
skip_missing_interpreters = true

[testenv]
commands = coverage run --parallel-mode -m pytest
deps =
    -rtests/requirements_pytest.txt
passenv =
    REDIS_URI
    TELEGRAM_TOKEN
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONUTF8 = 1
# parallel_show_output = true
depends =
#     py{310,39,38,37}: pre-commit, new-install
    post: py{310,39,38,37}

[testenv:pre-commit]
# Settings defined in the top-level testenv section are automatically inherited if not overwritten
basepython = python3.7
deps =
    -rrequirements.txt
    -rtests/requirements_pre-commit.txt
    -rdocs/requirements.txt
commands =
    pre-commit autoupdate
    pre-commit run -a

[testenv:new-install]
# Settings defined in the top-level testenv section are automatically inherited if not overwritten
# new-install tests a clean new installation using wheel, ensuring e.g. that all packages are installed as well
basepython = python3.7
commands =
    python setup.py bdist_wheel
    pip install --upgrade  --find-links={toxinidir}/dist webchanges
    webchanges -v --clean-cache
    python -c "from pathlib import Path; dir = Path.home().joinpath('Documents').joinpath('webchanges'); [f.unlink() for f in dir.iterdir()]; dir.rmdir()"
deps = wheel
setenv = USERPROFILE = {env:TEMP}
download = true
skip_install = true
isolated_build = true

[testenv:post]
# Post-test cleanup
whitelist_externals =
    cmd
    coverage
commands =
    coverage combine
    coverage html --fail-under=78
    # TODO The below works in Windows only
    cmd /c start "" htmlcov/index.html
deps =
allowlist_externals =
    cmd
skip_install = true

[testenv:docs]
# Test docs
deps =
    -rrequirements.txt
    -rdocs/requirements.txt
whitelist_externals =
    cmd
    sphinx-build
commands =
    sphinx-build -W -j auto docs docs/_build
    # TODO The below works in Windows only
    cmd /c if %errorlevel% equ 0 start "" "file://{toxinidir}/docs/_build/index.html"

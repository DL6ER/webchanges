# tox.ini file for Tox https://tox.readthedocs.io/en/latest/config.html

# To perform the same tests done in GitHub Actions by CI-CD but locally (i.e. before pushing), run $ tox --parallel

# At its core tox provides a convenient way to run arbitrary commands in isolated environments to serve as a single
# entry point for build, test and release activities.

# May be run in parallel:
# > tox -p  # TODO: this can be unreliable

[tox]
minversion = 3.27.0
envlist =
    pre-commit,
    new-install,
    py{311,310,39,38},
    post,
    docs,
skip_missing_interpreters = true

[testenv]
commands =
    coverage run --parallel-mode -m pytest
allowlist_externals =
    coverage
deps =
    -rrequirements.txt
    -rtests/requirements_pytest.txt
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONUTF8 = 1
    PYTEST_ADDOPTS = --color=yes
    PRE_COMMIT_COLOR = always
    # TODO The command below works in Windows only
    WEBCHANGES_BROWSER_PATH = C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
passenv =
    REDIS_URI
    TELEGRAM_TOKEN
sitepackages = true
download = true
skip_install = true
parallel_show_output = true
depends =
    py{311,310,39,38}: pre-commit, new-install
    post: py{311,310,39,38}

[testenv:pre-commit]
commands =
    pre-commit autoupdate
    pre-commit run -a
allowlist_externals =
    pre-commit
deps =
    -rtests/requirements_pre-commit.txt
    -rdocs/requirements.txt

[testenv:post]
# Post-test cleanup
commands =
    coverage combine
    coverage html --fail-under = 78
    # TODO The command below works in Windows only
    cmd /c start "" htmlcov/index.html
allowlist_externals =
    cmd
    coverage
skip_install = true

[testenv:docs]
# Test docs
# We run in Python 3.11 as per our .readthedocs.yaml
basepython = python3.11
commands =
    sphinx-build -W -j auto docs docs/_build
    # TODO The command below works in Windows only
    cmd /c if %errorlevel% equ 0 start "" "file://{toxinidir}/docs/_build/index.html"
allowlist_externals =
    cmd
    sphinx-build
deps =
    -rrequirements.txt
    -rdocs/requirements.txt

[testenv:new-install]
# Settings defined in the top-level testenv section are automatically inherited if not overwritten
# This test emulates a new installation using wheel, ensuring e.g. that all packages are installed
isolated_build = true
# We run the lowest version we support
basepython = python3.8
commands =
    pip install --upgrade pip setuptools wheel
    python setup.py bdist_wheel
    pip install --upgrade --find-links={toxinidir}/dist webchanges
    webchanges --help
    # python -c "from pathlib import Path; dir = Path.home().joinpath('Documents').joinpath('webchanges'); [f.unlink() for f in dir.iterdir()]; dir.rmdir()"
# The empty list of deps below overrides top level deps
deps =
setenv = USERPROFILE = {env:TEMP}
download = true
skip_install = true
